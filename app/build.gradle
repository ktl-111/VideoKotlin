apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from:"$rootDir.absolutePath/baleUpload.gradle"
def configs = rootProject.ext.configs
def librarys = rootProject.ext.librarys
upload {
    version configs["versionName"]
    isRelease true
}
android {
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
    properties.load(inputStream)
    signingConfigs {
        config {
            keyAlias 'liubin1996'
            keyPassword 'liubin1996'
            storeFile file(properties.getProperty('signingFileUrl'))
            storePassword 'liubin1996'
        }
    }
    compileSdkVersion configs["compileSdkVersion"]
    defaultConfig {
        applicationId "l.liubin.com.videokotlin"
        minSdkVersion configs["minSdkVersion"]
        targetSdkVersion configs["targetSdkVersion"]
        renderscriptSupportModeEnabled true
        renderscriptTargetApi configs["minSdkVersion"]
        versionCode configs["versionCode"]
        versionName configs["versionName"]
        multiDexEnabled true
        testInstrumentationRunner 'com.android.support.test:runne'
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "videokotlin_${configs["versionName"]}.apk"
                }
            }
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation librarys["support_appcompat_v7"]
    implementation librarys["support_design"]
    implementation librarys["support_cardview_v7"]
    implementation librarys["support_recyclerview_v7"]
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //banner
    implementation 'com.youth.banner:banner:1.4.9'
    //圆角imgview
    implementation 'com.makeramen:roundedimageview:2.3.0'
    //glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    //    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:palette-v7:28.0.0'
    implementation 'com.google.android:flexbox:0.3.1'
    implementation 'com.android.support:multidex:1.0.0'
    api project(':downloadmodel')
//    api 'com.steaml:download:1.0.0'
    api project(':indexmodel')
    api project(':categoriesmodel')
    api project(':popularmodel')
    api project(':minemodel')
//    compile(name: 'minemodel-debug', ext: 'aar')
}

