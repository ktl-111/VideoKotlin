apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'maven'//maven仓库插件
def configs = rootProject.ext.configs
def librarys = rootProject.ext.librarys
android {
    compileSdkVersion configs["compileSdkVersion"]

    defaultConfig {
        minSdkVersion configs["minSdkVersion"]
        targetSdkVersion configs["compileSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
def dbflow_version = "4.2.4"
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation librarys["support_appcompat_v7"]
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    api project(':apimodel')
    api project(':mvpmodel')
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
//配置需要上传到maven仓库的文件
artifacts {
    archives androidSourcesJar
}
uploadArchives {
    repositories {
        mavenDeployer {
            //Copy复制仓库路径
            repository(url: 'http://127.0.0.1:8081/repository/test/') {
                //你Nexus的账户密码
                authentication(userName: 'admin', password: 'admin123')
            }
            pom.project {
                version '1.0.3' //版本号，多次打包不能一致
                artifactId 'download' //识别Id，与项目名称一致即可
                groupId 'com.steaml' //组号，类似包名
                packaging 'aar' //打包格式
                description 'PrintHello dependences lib' //描述
            }
        }
    }
}
repositories {
    mavenCentral()
}
